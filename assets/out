#!/bin/bash

set -e

exec 3>&1 # make stdout available as fd 3 for the result
exec 1>&2 # redirect all output to stderr for logging

source=$1

if [ -z "$source" ]; then
  echo "usage: $0 <path/to/source>"
  exit 1
fi

cd $source

# for jq
PATH=/usr/local/bin:$PATH

payload=$(mktemp $TMPDIR/maven-resource-request.XXXXXX)

cat > $payload <&0

url=$(jq -r '.source.url // ""' < $payload)
username=$(jq -r '.source.username // ""' < $payload)
password=$(jq -r '.source.password // ""' < $payload)
file=$(jq -r '.params.file // ""' < $payload)
pom=$(jq -r '.params.pom // ""' < $payload)
groupId=$(jq -r '.params.groupId // ""' < $payload)
artifactId=$(jq -r '.params.artifactId // ""' < $payload)
version_file=$(jq -r '.params.version_file // ""' < $payload)
packaging=$(jq -r '.params.packaging // ""' < $payload)
#MAVEN_OPTS=$(jq -r '.params.maven_opts // ""' < $payload)
#MAVEN_CONFIG=$(jq -r '.params.maven_config // ""' < $payload)
MAVEN_CONFIG="-s $(dirname $0)/.m2/settings.xml"

if [ -z "$url" ]; then
  echo "invalid payload (missing url)"
  exit 1
fi

if [ -z "$file" ]; then
  echo "invalid payload (missing file)"
  exit 1
fi
file=$(ls $file)

version=
if [ -f "$version_file" ]; then
  version=$(cat $version_file)
elif [ -f "$pom" ]; then
  version=$(xmllint --xpath "//*[local-name()='project']/*[local-name()='version']/text()" $pom)
fi

args=
args="$args -Dfile=$file"
args="$args -Durl=$url"

if [ -z "$pom" ]; then
  args="$args -DgroupId=$groupId"
  args="$args -DartifactId=$artifactId"
  args="$args -Dversion=$version"
  args="$args -Dpackaging=$packaging"
else
  args="$args -DpomFile=$pom"
fi

[ -n "$username" ] && args="$args -Drepository.username=$username";
[ -n "$password" ] && args="$args -Drepository.password=$password";

mvn $MAVEN_CONFIG deploy:deploy-file $args

jq -n "{
  version: {version: $(echo $version | jq -R .)}
}" >&3
