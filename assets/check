#!/bin/bash
# vim: set ft=sh

set -e

exec 3>&1 # make stdout available as fd 3 for the result
exec 1>&2 # redirect all output to stderr for logging

source $(dirname $0)/common.sh

# for jq
PATH=/usr/local/bin:$PATH

payload=$(mktemp $TMPDIR/git-resource-request.XXXXXX)
working=$(mktemp $TMPDIR/git-resource-working.XXXXXX)

cat > $payload <&0

url=$(jq -r '.source.url // ""' < $payload)
artifact=$(jq -r '.source.artifact // ""' < $payload)
version=$(jq -r '.version.version // ""' < $payload)
username=$(jq -r '.source.username // ""' < $payload)
password=$(jq -r '.source.password // ""' < $payload)
skip_cert_check=$(jq -r '.source.skip_cert_check // ""' < $payload)
repository_cert=$(jq -r '.source.repository_cert // ""' < $payload)

# groupId:artifactId:type[:classifier]
groupId=$(get_group_id $artifact)
artifactId=$(get_artifact_id $artifact)

auth=""
if [ -n "$username" ]; then
  auth="--user $username:$password"
fi

cert=""
if [ "$skip_cert_check" = "true" ]; then
  cert="-k"
elif [ -n "$repository_cert" ]; then
  mkdir $working/ssl
  echo "$repository_cert" > $working/ssl/repository.crt
  cert="--cacert $working/ssl/repository.crt"
fi

metadataUrl="$url/${groupId//.//}/$artifactId/maven-metadata.xml"

output=$(curl -s $cert $auth $metadataUrl)

declare -a versions=( )
if [ "$version" = "latest" ] || [ -z "$version" ]; then
  versions[1]=$(echo $output | xmllint --xpath "/metadata/versioning/versions/version[last()]/text()" - 2>/dev/null)
else
  itemsCount=$(echo $output | xmllint --xpath 'count(/metadata/versioning/versions/version)' -)

  for (( i=1; i <= $itemsCount; i++ )); do
    versions[$i]=$(echo $output | xmllint --xpath "/metadata/versioning/versions/version[$i]/text()" -)
  done
fi

printf "%s\n" "${versions[@]}" | sed 's/.*/{ "version": "&" }/' | jq --slurp . >&3
