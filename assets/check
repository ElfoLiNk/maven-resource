#!/bin/bash
# vim: set ft=sh

set -e

exec 3>&1 # make stdout available as fd 3 for the result
exec 1>&2 # redirect all output to stderr for logging

source $(dirname $0)/common.sh

source=$1

if [ -z "$source" ]; then
  echo "usage: $0 <path/to/source>"
  exit 1
fi

cd $source

# for jq
PATH=/usr/local/bin:$PATH

payload=$(mktemp $TMPDIR/git-resource-request.XXXXXX)

cat > $payload <&0

url=$(jq -r '.source.url // ""' < $payload)
artifact=$(jq -r '.source.artifact // ""' < $payload)
version=$(jq -r '.version.version // ""' < $payload)
username=$(jq -r '.source.username // ""' < $payload)
password=$(jq -r '.source.password // ""' < $payload)
skip_cert_check=$(jq -r '.source.skip_cert_check // ""' < $payload)
repository_cert=$(jq -r '.source.repository_cert // ""' < $payload)

# groupId:artifactId:type[:classifier]
groupId=$(get_group_id $artifact)
artifactId=$(get_artifact_id $artifact)

auth=""
if [ -n "$username" ]; then
  auth="--user $username:$password"
fi

cert=""
if [ "$skip_cert_check" = "true" ]; then
  cert="-k"
elif [ -n "$repository_cert" ]; then
  mkdir $source/ssl
  echo "$repository_cert" > $source/ssl/repository.crt
  cert="--cacert $source/ssl/repository.crt"
fi

metadataUrl="$url/${groupId//.//}/$artifactId/maven-metadata.xml"

pattern=$([ -z "$version" ] && echo "\$p" || echo "/^$version\$/,\$p")

curl -s $cert $auth $metadataUrl \
  | xmllint --xpath "/metadata/versioning/versions/version" - \
  | awk -F'</?version>' '{for(i=2;i<=NF;i++) if ($i != "") print $i}' \
  | sed -n "${pattern}" \
  | sed 's/.*/{ "version": "&" }/' \
  | jq --slurp .
